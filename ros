ros相关：
	setup.bash:
		setup.bash的作用是让一些ROS* 开头的命令可以使用
		ros想要使用ros命令需要source一下setup.bash文件
		$ source /opt/ros/melodic/setup.bash

	bashrc:
		.bashrc文件的作用，（隐藏文件）在根目录下，每打开一个terminal自动加载的一些参数和配置
		.bashrc 或者~/.bashrc 文件下添加.	
				：$CODE_BASE=/home/xyz/xyz_app/ 环境变量
				：source /opt/ros/melodic/setup.bash
	catkin_make:
		在catkin_ws目录下，输入catkin_make
		编译所有包		
		将src目录下的文件导入到环境变量当中
	rosrun:
		rosrun包名下的指定可执行文件
		如果文件需要rosrun的话需要chmod +x
	
	source:
		source catkin_wc/devel/setup.bash

	include: ros/ros.h存在波浪线
		如果存在波浪线，编辑编译环境中的:c_cpp_properties.json    ------------->ctrl+shift+p 选择C/C++ Edit/Configurations(json)
					{
					    "configurations": [
						{
						    "name": "Linux",
						    "includePath": [
							"${workspaceFolder}/**",
							"${workspaceFolder}/devel/include",
							"/opt/ros/kinetic/include"
						    ],
						    "defines": [],
						    "compilerPath": "/usr/bin/gcc",
						    "cStandard": "gnu11",
						    "cppStandard": "gnu++14",
						    "intelliSenseMode": "linux-gcc-x64"
						}
					    ],
					    "version": 4
					}

	添加srv消息：
		1.在包目录下package.xml文件中将一下文件注释取消
			<build_depend>message_generation</build_depend>
			<build_export_depend>message_generation</build_export_depend>
			<exec_depend>message_runtime</exec_depend>
		2.在CMakeLists.txt文件中
			1.find_package(添加message_generation)
			2.add_message_files(
					  FILES
					  GetCart.msg
					)
			3.add_service_files(
					  FILES
					  GetCart.srv
					)
			4.取消注释generate_messages(
					  DEPENDENCIES
					  std_msgs
					)
	添加msg消息：
		1.add_executable()
		2.target_link_libraries()
		3.add_dependencies() ##c++才需要，编译的support
