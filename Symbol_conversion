无符号转有符号
word超过32767补码的形式发送

def get_real_data(a):
	if a >32767:
	    a = a - 65536
	return a
	
	
方法1 原码：第一位表达正负，后面与正数相同 
例子：以 4 bit 世界来说明。

5.    0 101
-5.   1 101.     把第一个bit设成1的运算是+8 (2^3)。5+8  = 13->a (下位机收到的正整数值).     
                      如何得到-5？即把8减去然后加负号：-(a – 8)   = 8 - a = -5

回到 16bit word 的世界


IF value>32767 THEN
  value:=32768-value;
ENDIF      
方法2 使用补码 (2’s complement)
将A取负，是将A以二进制表达，将所有bit反过来，然后加 1。不论正负。

例子：以 4 bit 世界来说明。

5.    0 101
-5.   1 010 +1 →  1011

验证把 -5 取负数是否能得到 5，即-(-5) = 5：1011 →  0100 +1 → 0101

4.     0100 -> b
-4.    1011 -> 1100 (b’) 下位机收到的值
-(-4).  0011 -> 0100

验证把 -4 取负数是否能得到 4，即-(-4) = 4：1100 →  0011 +1 → 0100

 

将下位机得到的 b’ 转正为b然后加负号。

neg(b’) = 1111 – 1100 (b’) + 1 = 0011  + 1 = 0100 (b)
                   15     –    b’       + 1 = 16 – b  加负号-> b - 16

列表直观看法


0    0000      -0    1111-> 0000               0
1    0001      -1    1110-> 1111     8+4+2+1= 15
2    0010      -2    1101-> 1110              14
3              -3                             13
4              -4                             12
回到 16 bit word 的世界


IF value>32767 THEN
  value:=value-65536;
ENDIF      
 
